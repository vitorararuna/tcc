spring.application.name=spring-boot-admin-server

spring.main.allow-bean-definition-overriding=true

spring.security.user.name=admin
spring.security.user.password=admin

#configs to connect to self register the admin server as a client
spring.boot.admin.client.url=http://localhost:8080
spring.boot.admin.client.username=${spring.security.user.name}
spring.boot.admin.client.password=${spring.security.user.password}

#configs to give secured server info
spring.boot.admin.client.instance.metadata.user.name=${spring.security.user.name}
spring.boot.admin.client.instance.metadata.user.password=${spring.security.user.password}

management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always

logging.level.org.springframework.web.client=DEBUG
logging.level.org.springframework.web.server=DEBUG

#LOG
spring.output.ansi.enabled=ALWAYS
logging.file.name=/var/log/sample-boot-application.log (1)
    ## Destino em que o arquivo de log é gravado. Habilita o ARQUIVO DE LOG DO ENDPOINT ACTUATOR.
logging.pattern.file=%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(%5p) %clr(${PID}){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n%wEx (2)
    ## Padrão de log de arquivo usando cores ANSI.

##NOTIFFICATION
#spring.mail.host=smtp.gmail.com
#    ## Define o servidor SMTP que será usado para enviar os e-mails ---> Por que usar: Especifica qual provedor de e-mail (como Gmail, Outlook, etc.) será utilizado.
#
#spring.mail.port=587
#    ## Porta usada para se conectar ao servidor SMTP. --> Por que usar: Diferentes provedores de e-mail podem requerer portas específicas.
#
#spring.mail.username=seu_email@gmail.com
#    ## O e-mail que será utilizado como remetente (normalmente, o login da sua conta de e-mail). --> Por que usar: Especifica qual e-mail será utilizado para enviar os e-mails.
#
#spring.mail.password=sua_senha
#    ## A senha da conta de e-mail que será utilizada como remetente. --> Por que usar: Especifica a senha da conta de e-mail que será utilizada para enviar os e-mails.
#
#spring.mail.protocol=smtp
#    ## Define o protocolo de e-mail que será utilizado para enviar os e-mails. --> Por que usar: O protocolo SMTP (Simple Mail Transfer Protocol) é o mais comum para envio de e-mails.
#
#spring.mail.properties.mail.smtp.auth=true
#    ## Indica se a autenticação no servidor SMTP é necessária. --> Por que usar: A maioria dos servidores SMTP requer autenticação para evitar envios não autorizados.
#
#spring.mail.properties.mail.smtp.starttls.enable=true
#    ## Habilita a criptografia STARTTLS para conexões SMTP. --> Por que usar: STARTTLS é usado para criptografar as comunicações com o servidor, garantindo maior segurança.
#
#spring.mail.properties.mail.smtp.starttls.required=true
#    ## Indica se o STARTTLS é obrigatório para a conexão. --> Por que usar: Isso garante que a conexão não será estabelecida sem criptografia, aumentando a segurança.
#
#spring.mail.default-encoding=UTF-8
#    ## Define a codificação padrão usada ao enviar e-mails. --> Por que usar: A codificação UTF-8 garante suporte a caracteres especiais e evita problemas com acentuação e símbolos.
#
#spring.mail.properties.mail.debug=true
#    ##  Habilita logs detalhados para depuração do processo de envio de e-mails. --> Por que usar: Útil para identificar problemas de configuração ou conexão durante o desenvolvimento.